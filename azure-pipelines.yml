strategy:
  matrix:
    windows-stable:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
    mac-stable:
      imageName: 'macos-10.13'
      rustup_toolchain: stable
    linux-stable:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: stable
#     linux-beta:
#       imageName: 'ubuntu-16.04'
#       rustup_toolchain: beta
#     linux-nightly:
#       imageName: 'ubuntu-16.04'
#       rustup_toolchain: nightly

pool:
  vmImage: $(imageName)

steps:
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo build --all --verbose
    displayName: Cargo build
  - script: cargo test --all --verbose
    displayName: Cargo test
  - task: CopyFiles@2
    displayName: copy windows runtime
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/target/debug'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/runtimes/win-x64/native'
      Contents: 'catalystffi.*'
  - task: CopyFiles@2
    displayName: copy macos runtime
    condition: eq( variables['Agent.OS'], 'Darwin' )
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/target/debug'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/runtimes/osx-x64/native'
      Contents: 'libcatalystffi.*'
  - task: CopyFiles@2
    displayName: copy linux runtime
    condition: eq( variables['Agent.OS'], 'Linux' )
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)/target/debug'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/runtimes/linux-x64/native'
      Contents: 'libcatalystffi.*'
  - task: CopyFiles@2
    displayName: copy Licence and csproj for nuget packaging
    inputs:
      SourceFolder: '.'
      Contents: '?(*.csproj|LICENSE)'
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
  - task: PublishBuildArtifacts@1
    displayName: Publish Artifacts
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: artifacts
